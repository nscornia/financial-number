{
  "root": true,
  "ignorePatterns": ["projects/**/*", "**/*.mjs"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "extends": [
        // "plugin:@angular-eslint/ng-cli-compat",
        // "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates",
        "prettier"
      ],
      "parserOptions": {
        "createDefaultProgram": true,
        "project": ["tsconfig.json"]
      },
      "plugins": ["@typescript-eslint", "import"],
      "rules": {
        "@angular-eslint/component-class-suffix": "off",
        "@angular-eslint/component-selector": "off",
        "@angular-eslint/directive-class-suffix": "off",
        "@angular-eslint/directive-selector": "off",
        "@angular-eslint/no-conflicting-lifecycle": "off",
        "@angular-eslint/no-input-rename": "off",
        "@angular-eslint/no-output-rename": "off",
        "@angular-eslint/no-output-native": "off",
        "@angular-eslint/no-inputs-metadata-property": "off",
        "@angular-eslint/no-host-metadata-property": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/dot-notation": "off",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": false
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "explicit",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "variable",
            "format": ["camelCase", "PascalCase", "UPPER_CASE"],
            "leadingUnderscore": "allow"
          }
        ],
        "@typescript-eslint/quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true,
            "avoidEscape": true
          }
        ],
        "@typescript-eslint/semi": ["error", "never"],
        "arrow-body-style": "off",
        "id-blacklist": "off",
        "import/no-deprecated": "error",
        "jsdoc/no-types": "off",
        "no-shadow": "off",
        "no-underscore-dangle": "off",
        "prefer-arrow/prefer-arrow-functions": "off",
        "eqeqeq": ["error", "smart"],
        "curly": ["error", "all"]
      }
    },
    {
      "files": ["*.spec.ts"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    },
    {
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "files": ["*.html"],
      "rules": {
        "@angular-eslint/template/eqeqeq": [
          "error",
          {
            "allowNullOrUndefined": true
          }
        ]
      }
    }
  ],
  "env": {
    "es2020": true
  }
}
